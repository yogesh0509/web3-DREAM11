//! `SeaORM` Entity, @generated by sea-orm-codegen 1.0.0-rc.5

use sea_orm::entity::prelude::*;
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq, Serialize, Deserialize)]
#[sea_orm(table_name = "game_details")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    pub game_address: String,
    pub auction_address: String,
    pub pic_address: String,
    pub auction_start_time: DateTimeUtc,
    pub auction_end_time: DateTimeUtc,
    pub final_results_time: DateTimeUtc,
    pub total_players: i32,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation, Serialize, Deserialize)]
pub enum Relation {
    #[sea_orm(has_many = "super::player_details::Entity")]
    PlayerDetails,
}

impl Related<super::player_details::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::PlayerDetails.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
